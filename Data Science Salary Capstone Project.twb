<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20232.23.0909.1159                               -->
<workbook original-version='18.1' source-build='2023.2.2 (20232.23.0909.1159)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AccessibleZoneTabOrder.true...AccessibleZoneTabOrder />
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelExtractV2.true...ObjectModelExtractV2 />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <_.fcp.VConnDownstreamExtractsWithWarnings.true...VConnDownstreamExtractsWithWarnings />
    <WindowsPersistSimpleIdentifiers />
    <WorksheetBackgroundTransparency />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource caption='jobs_in_data' inline='true' name='federated.09vnp851mbmqb712dhgsr06j553t' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='jobs_in_data' name='textscan.0avdptc1fiftno15n756v0ufeuhw'>
            <connection class='textclean' cleaning='yes' compat='no' csvFile='F:/Datasets/Job in Data Science/jobs_in_data.csv' dataRefreshTime='' directory='F:/Datasets/Job in Data Science' filename='C:/Users/kiran/AppData/Local/Temp/TableauTemp/0m1g3i60jblb1819d8c0f1btwybh/jobs_in_data.csv.xlsx' interpretationMode='8' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.0avdptc1fiftno15n756v0ufeuhw' name='jobs_in_data.csv' table='[jobs_in_data#csv$]' type='table'>
          <columns character-set='UTF-8' gridOrigin='A1:L9356:no:A1:L9356:1' header='yes' locale='en_IN' separator=','>
            <column datatype='integer' name='work_year' ordinal='0' />
            <column datatype='string' name='job_title' ordinal='1' />
            <column datatype='string' name='job_category' ordinal='2' />
            <column datatype='string' name='salary_currency' ordinal='3' />
            <column datatype='integer' name='salary' ordinal='4' />
            <column datatype='integer' name='salary_in_usd' ordinal='5' />
            <column datatype='string' name='employee_residence' ordinal='6' />
            <column datatype='string' name='experience_level' ordinal='7' />
            <column datatype='string' name='employment_type' ordinal='8' />
            <column datatype='string' name='work_setting' ordinal='9' />
            <column datatype='string' name='company_location' ordinal='10' />
            <column datatype='string' name='company_size' ordinal='11' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='textscan.0avdptc1fiftno15n756v0ufeuhw' name='jobs_in_data.csv' table='[jobs_in_data#csv$]' type='table'>
          <columns character-set='UTF-8' gridOrigin='A1:L9356:no:A1:L9356:1' header='yes' locale='en_IN' separator=','>
            <column datatype='integer' name='work_year' ordinal='0' />
            <column datatype='string' name='job_title' ordinal='1' />
            <column datatype='string' name='job_category' ordinal='2' />
            <column datatype='string' name='salary_currency' ordinal='3' />
            <column datatype='integer' name='salary' ordinal='4' />
            <column datatype='integer' name='salary_in_usd' ordinal='5' />
            <column datatype='string' name='employee_residence' ordinal='6' />
            <column datatype='string' name='experience_level' ordinal='7' />
            <column datatype='string' name='employment_type' ordinal='8' />
            <column datatype='string' name='work_setting' ordinal='9' />
            <column datatype='string' name='company_location' ordinal='10' />
            <column datatype='string' name='company_size' ordinal='11' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[jobs_in_data.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:K9356:no:A1:K9356:1&quot;</attribute>
              <attribute datatype='integer' name='lost'>0</attribute>
              <attribute datatype='integer' name='outcome'>1</attribute>
              <attribute datatype='integer' name='processed'>28065</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>work_year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[work_year]</local-name>
            <parent-name>[jobs_in_data.csv]</parent-name>
            <remote-alias>work_year</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[jobs_in_data.csv_9BED2C3F9F7849CDB4336E24785EBDE8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>job_title</remote-name>
            <remote-type>130</remote-type>
            <local-name>[job_title]</local-name>
            <parent-name>[jobs_in_data.csv]</parent-name>
            <remote-alias>job_title</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[jobs_in_data.csv_9BED2C3F9F7849CDB4336E24785EBDE8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>job_category</remote-name>
            <remote-type>130</remote-type>
            <local-name>[job_category]</local-name>
            <parent-name>[jobs_in_data.csv]</parent-name>
            <remote-alias>job_category</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[jobs_in_data.csv_9BED2C3F9F7849CDB4336E24785EBDE8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>salary_currency</remote-name>
            <remote-type>130</remote-type>
            <local-name>[salary_currency]</local-name>
            <parent-name>[jobs_in_data.csv]</parent-name>
            <remote-alias>salary_currency</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[jobs_in_data.csv_9BED2C3F9F7849CDB4336E24785EBDE8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>salary</remote-name>
            <remote-type>20</remote-type>
            <local-name>[salary]</local-name>
            <parent-name>[jobs_in_data.csv]</parent-name>
            <remote-alias>salary</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[jobs_in_data.csv_9BED2C3F9F7849CDB4336E24785EBDE8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>salary_in_usd</remote-name>
            <remote-type>20</remote-type>
            <local-name>[salary_in_usd]</local-name>
            <parent-name>[jobs_in_data.csv]</parent-name>
            <remote-alias>salary_in_usd</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[jobs_in_data.csv_9BED2C3F9F7849CDB4336E24785EBDE8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>experience_level</remote-name>
            <remote-type>130</remote-type>
            <local-name>[experience_level]</local-name>
            <parent-name>[jobs_in_data.csv]</parent-name>
            <remote-alias>experience_level</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[jobs_in_data.csv_9BED2C3F9F7849CDB4336E24785EBDE8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>employment_type</remote-name>
            <remote-type>130</remote-type>
            <local-name>[employment_type]</local-name>
            <parent-name>[jobs_in_data.csv]</parent-name>
            <remote-alias>employment_type</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[jobs_in_data.csv_9BED2C3F9F7849CDB4336E24785EBDE8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>work_setting</remote-name>
            <remote-type>130</remote-type>
            <local-name>[work_setting]</local-name>
            <parent-name>[jobs_in_data.csv]</parent-name>
            <remote-alias>work_setting</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[jobs_in_data.csv_9BED2C3F9F7849CDB4336E24785EBDE8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>company_location</remote-name>
            <remote-type>130</remote-type>
            <local-name>[company_location]</local-name>
            <parent-name>[jobs_in_data.csv]</parent-name>
            <remote-alias>company_location</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[jobs_in_data.csv_9BED2C3F9F7849CDB4336E24785EBDE8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>company_size</remote-name>
            <remote-type>130</remote-type>
            <local-name>[company_size]</local-name>
            <parent-name>[jobs_in_data.csv]</parent-name>
            <remote-alias>company_size</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[jobs_in_data.csv_9BED2C3F9F7849CDB4336E24785EBDE8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column aggregation='None' datatype='integer' name='[Salary In Usd (bin)]' role='dimension' type='quantitative'>
        <calculation class='bin' decimals='4' formula='[salary_in_usd]' peg='0' size='12613' />
      </column>
      <_.fcp.ObjectModelTableType.true...column caption='jobs_in_data.csv' datatype='table' name='[__tableau_internal_object_id__].[jobs_in_data.csv_9BED2C3F9F7849CDB4336E24785EBDE8]' role='measure' type='quantitative' />
      <column caption='Company Location' datatype='string' name='[company_location]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
      <column caption='Company Size' datatype='string' name='[company_size]' role='dimension' type='nominal' />
      <column caption='Employment Type' datatype='string' name='[employment_type]' role='dimension' type='nominal' />
      <column caption='Experience Level' datatype='string' name='[experience_level]' role='dimension' type='nominal' />
      <column caption='Job Category' datatype='string' name='[job_category]' role='dimension' type='nominal' />
      <column caption='Job Title' datatype='string' name='[job_title]' role='dimension' type='nominal' />
      <column caption='Salary' datatype='integer' name='[salary]' role='measure' type='quantitative' />
      <column caption='Salary Currency' datatype='string' name='[salary_currency]' role='dimension' type='nominal' />
      <column caption='Salary In Usd' datatype='integer' name='[salary_in_usd]' role='measure' type='quantitative' />
      <column caption='Work Setting' datatype='string' name='[work_setting]' role='dimension' type='nominal' />
      <column caption='Work Year' datatype='integer' name='[work_year]' role='dimension' type='quantitative' />
      <column-instance column='[__tableau_internal_object_id__].[jobs_in_data.csv_9BED2C3F9F7849CDB4336E24785EBDE8]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:jobs_in_data.csv_9BED2C3F9F7849CDB4336E24785EBDE8:qk]' pivot='key' type='quantitative' />
      <column-instance column='[salary]' derivation='Avg' name='[avg:salary:qk]' pivot='key' type='quantitative' />
      <column-instance column='[salary_in_usd]' derivation='Avg' name='[avg:salary_in_usd:qk]' pivot='key' type='quantitative' />
      <column-instance column='[salary]' derivation='CountD' name='[ctd:salary:qk]' pivot='key' type='quantitative' />
      <column-instance column='[salary_in_usd]' derivation='CountD' name='[ctd:salary_in_usd:qk]' pivot='key' type='quantitative' />
      <column-instance column='[salary]' derivation='Max' name='[max:salary:qk]' pivot='key' type='quantitative' />
      <column-instance column='[salary]' derivation='Min' name='[min:salary:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Forecast Indicator]' derivation='None' forecast-column-base='[Forecast Indicator]' forecast-column-type='forecast-indicator' name='[none:Forecast Indicator:nk]' pivot='key' type='nominal' />
      <column-instance column='[company_location]' derivation='None' name='[none:company_location:nk]' pivot='key' type='nominal' />
      <column-instance column='[employment_type]' derivation='None' name='[none:employment_type:nk]' pivot='key' type='nominal' />
      <column-instance column='[experience_level]' derivation='None' name='[none:experience_level:nk]' pivot='key' type='nominal' />
      <column-instance column='[job_category]' derivation='None' name='[none:job_category:nk]' pivot='key' type='nominal' />
      <column-instance column='[work_setting]' derivation='None' name='[none:work_setting:nk]' pivot='key' type='nominal' />
      <column-instance column='[work_year]' derivation='None' name='[none:work_year:ok]' pivot='key' type='ordinal' />
      <column-instance aggregation-param='5' column='[salary]' derivation='Percentile' name='[prc5:salary:qk]' pivot='key' type='quantitative' />
      <column-instance column='[salary]' derivation='Sum' name='[sum:salary:qk]' pivot='key' type='quantitative' />
      <column-instance column='[salary_in_usd]' derivation='Sum' name='[sum:salary_in_usd:qk]' pivot='key' type='quantitative' />
      <group caption='Action (Company Location,Employment Type,Job Title)' hidden='true' name='[Action (Company Location,Employment Type,Job Title)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[company_location]' />
          <groupfilter function='level-members' level='[employment_type]' />
          <groupfilter function='level-members' level='[job_title]' />
        </groupfilter>
      </group>
      <group caption='Action (Experience Level,Job Title)' hidden='true' name='[Action (Experience Level,Job Title)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[experience_level]' />
          <groupfilter function='level-members' level='[job_title]' />
        </groupfilter>
      </group>
      <group caption='Action (Job Category)' hidden='true' name='[Action (Job Category)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[job_category]' />
        </groupfilter>
      </group>
      <group caption='Action (Job Category,Work Year)' hidden='true' name='[Action (Job Category,Work Year)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[job_category]' />
          <groupfilter function='level-members' level='[none:work_year:ok]' />
        </groupfilter>
      </group>
      <extract _.fcp.ObjectModelExtractV2.true...object-id='' _.fcp.VConnDownstreamExtractsWithWarnings.true...user-specific='false' count='-1' enabled='true' units='records'>
        <connection access_mode='readonly' authentication='auth-none' author-locale='en_US' class='hyper' dbname='C:/Users/kiran/OneDrive/Documents/My Tableau Repository/Datasources/jobs_in_datascience.hyper' default-settings='yes' schema='Extract' sslmode='' tablename='Extract' update-time='02/14/2024 12:50:40 PM' username='tableau_internal_user'>
          <_.fcp.ObjectModelEncapsulateLegacy.false...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <_.fcp.ObjectModelEncapsulateLegacy.true...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <refresh>
            <refresh-event add-from-file-path='jobs_in_data' increment-value='%null%' refresh-type='create' rows-inserted='9355' timestamp-start='2024-02-14 12:50:38.679' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>work_year</remote-name>
              <remote-type>20</remote-type>
              <local-name>[work_year]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>work_year</remote-alias>
              <ordinal>0</ordinal>
              <family>jobs_in_data.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>4</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[jobs_in_data.csv_9BED2C3F9F7849CDB4336E24785EBDE8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>job_title</remote-name>
              <remote-type>129</remote-type>
              <local-name>[job_title]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>job_title</remote-alias>
              <ordinal>1</ordinal>
              <family>jobs_in_data.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>124</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RIN_S2' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[jobs_in_data.csv_9BED2C3F9F7849CDB4336E24785EBDE8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>job_category</remote-name>
              <remote-type>129</remote-type>
              <local-name>[job_category]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>job_category</remote-alias>
              <ordinal>2</ordinal>
              <family>jobs_in_data.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>9</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RIN_S2' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[jobs_in_data.csv_9BED2C3F9F7849CDB4336E24785EBDE8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>salary_currency</remote-name>
              <remote-type>129</remote-type>
              <local-name>[salary_currency]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>salary_currency</remote-alias>
              <ordinal>3</ordinal>
              <family>jobs_in_data.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>6</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RIN_S2' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[jobs_in_data.csv_9BED2C3F9F7849CDB4336E24785EBDE8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>salary</remote-name>
              <remote-type>20</remote-type>
              <local-name>[salary]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>salary</remote-alias>
              <ordinal>4</ordinal>
              <family>jobs_in_data.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1063</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[jobs_in_data.csv_9BED2C3F9F7849CDB4336E24785EBDE8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>salary_in_usd</remote-name>
              <remote-type>20</remote-type>
              <local-name>[salary_in_usd]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>salary_in_usd</remote-alias>
              <ordinal>5</ordinal>
              <family>jobs_in_data.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1199</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[jobs_in_data.csv_9BED2C3F9F7849CDB4336E24785EBDE8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>experience_level</remote-name>
              <remote-type>129</remote-type>
              <local-name>[experience_level]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>experience_level</remote-alias>
              <ordinal>6</ordinal>
              <family>jobs_in_data.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>4</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RIN_S2' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[jobs_in_data.csv_9BED2C3F9F7849CDB4336E24785EBDE8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>employment_type</remote-name>
              <remote-type>129</remote-type>
              <local-name>[employment_type]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>employment_type</remote-alias>
              <ordinal>7</ordinal>
              <family>jobs_in_data.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>4</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RIN_S2' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[jobs_in_data.csv_9BED2C3F9F7849CDB4336E24785EBDE8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>work_setting</remote-name>
              <remote-type>129</remote-type>
              <local-name>[work_setting]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>work_setting</remote-alias>
              <ordinal>8</ordinal>
              <family>jobs_in_data.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>3</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RIN_S2' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[jobs_in_data.csv_9BED2C3F9F7849CDB4336E24785EBDE8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>company_location</remote-name>
              <remote-type>129</remote-type>
              <local-name>[company_location]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>company_location</remote-alias>
              <ordinal>9</ordinal>
              <family>jobs_in_data.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>55</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RIN_S2' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[jobs_in_data.csv_9BED2C3F9F7849CDB4336E24785EBDE8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>company_size</remote-name>
              <remote-type>129</remote-type>
              <local-name>[company_size]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>company_size</remote-alias>
              <ordinal>10</ordinal>
              <family>jobs_in_data.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>3</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RIN_S2' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[jobs_in_data.csv_9BED2C3F9F7849CDB4336E24785EBDE8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Forecast Indicator:nk]' palette='red_10_0' type='palette'>
            <map to='#f26250'>
              <bucket>&quot;Actual&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='shape' field='[:Measure Names]' type='shape'>
            <map to='circle'>
              <bucket>&quot;[federated.09vnp851mbmqb712dhgsr06j553t].[__tableau_internal_object_id__].[cnt:jobs_in_data.csv_9BED2C3F9F7849CDB4336E24785EBDE8:qk]&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;[federated.09vnp851mbmqb712dhgsr06j553t].[avg:salary_in_usd:qk]&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;[federated.09vnp851mbmqb712dhgsr06j553t].[ctd:salary_in_usd:qk]&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;[federated.09vnp851mbmqb712dhgsr06j553t].[sum:salary_in_usd:qk]&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;[federated.09vnp851mbmqb712dhgsr06j553t].[avg:salary:qk]&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;[federated.09vnp851mbmqb712dhgsr06j553t].[ctd:salary:qk]&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;[federated.09vnp851mbmqb712dhgsr06j553t].[max:salary:qk]&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;[federated.09vnp851mbmqb712dhgsr06j553t].[min:salary:qk]&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;[federated.09vnp851mbmqb712dhgsr06j553t].[none:job_category:nk]&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;[federated.09vnp851mbmqb712dhgsr06j553t].[prc5:salary:qk]&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;[federated.09vnp851mbmqb712dhgsr06j553t].[sum:salary:qk]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='shape' field='[none:work_setting:nk]' type='shape'>
            <map to='circle'>
              <bucket>&quot;Hybrid&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;Remote&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;In-person&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:company_location:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Belgium&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;India&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Pakistan&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;United Kingdom&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Algeria&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Estonia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Malaysia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;South Korea&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Armenia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Ghana&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Moldova&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Thailand&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Central African Republic&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Ireland&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Puerto Rico&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Bosnia and Herzegovina&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Indonesia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Philippines&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;United States&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Australia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Gibraltar&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Netherlands&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Turkey&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Ecuador&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Lithuania&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Slovenia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;American Samoa&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Finland&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Malta&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Czech Republic&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Kenya&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Austria&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Greece&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;New Zealand&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Ukraine&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;China&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Israel&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Qatar&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Colombia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Italy&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Romania&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Denmark&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Latvia&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Singapore&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Egypt&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Luxembourg&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;South Africa&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Iran&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Poland&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Bahamas&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Honduras&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Nigeria&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Andorra&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Mauritius&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Croatia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Japan&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Russia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Iraq&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Portugal&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Argentina&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:job_category:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;BI and Visualization&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Data Engineering&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Data Architecture and Modeling&quot;</bucket>
            </map>
            <map to='#9c755f'>
              <bucket>&quot;Leadership and Management&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Data Quality and Operations&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Machine Learning and AI&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Data Analysis&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;Data Management and Strategy&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Cloud and Database&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;Data Science and Research&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:employment_type:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Contract&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Part-time&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Full-time&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Freelance&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:experience_level:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Entry-level&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Senior&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Mid-level&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Executive&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
      </semantic-values>
      <default-sorts>
        <manual-sort column='[none:Forecast Indicator:nk]' direction='ASC'>
          <dictionary>
            <bucket>&quot;Actual&quot;</bucket>
            <bucket>&quot;Estimate&quot;</bucket>
          </dictionary>
        </manual-sort>
      </default-sorts>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='jobs_in_data.csv' id='jobs_in_data.csv_9BED2C3F9F7849CDB4336E24785EBDE8'>
            <properties context=''>
              <relation connection='textscan.0avdptc1fiftno15n756v0ufeuhw' name='jobs_in_data.csv' table='[jobs_in_data#csv$]' type='table'>
                <columns character-set='UTF-8' gridOrigin='A1:L9356:no:A1:L9356:1' header='yes' locale='en_IN' separator=','>
                  <column datatype='integer' name='work_year' ordinal='0' />
                  <column datatype='string' name='job_title' ordinal='1' />
                  <column datatype='string' name='job_category' ordinal='2' />
                  <column datatype='string' name='salary_currency' ordinal='3' />
                  <column datatype='integer' name='salary' ordinal='4' />
                  <column datatype='integer' name='salary_in_usd' ordinal='5' />
                  <column datatype='string' name='employee_residence' ordinal='6' />
                  <column datatype='string' name='experience_level' ordinal='7' />
                  <column datatype='string' name='employment_type' ordinal='8' />
                  <column datatype='string' name='work_setting' ordinal='9' />
                  <column datatype='string' name='company_location' ordinal='10' />
                  <column datatype='string' name='company_size' ordinal='11' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='Extract' table='[Extract].[Extract]' type='table' />
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <actions>
    <action caption='Highlight 1 (generated)' name='[Action1_3D9B7A04A7464B33A9AE95E9CF504C5A]'>
      <activation auto-clear='true' type='on-select' />
      <source type='sheet' worksheet='Line Chart Avg Salary vs Years' />
      <command command='tsc:brush'>
        <param name='field-captions' value='Forecast Indicator' />
        <param name='target' value='Line Chart Avg Salary vs Years' />
      </command>
    </action>
    <action caption='Highlight 2 (generated)' name='[Action2_BDD4F3242AC94944B58FE31345960E5D]'>
      <activation auto-clear='true' type='on-select' />
      <source type='sheet' worksheet='Pie Chart Avg Salary vs Employment type vs USD vs Year ' />
      <command command='tsc:brush'>
        <param name='special-fields' value='all' />
        <param name='target' value='Pie Chart Avg Salary vs Employment type vs USD vs Year ' />
      </command>
    </action>
    <action caption='Filter 1 (generated)' name='[Action3_79FF099D2B0D4A66B31CBFC9300B6A74]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Job in Data Science Salary Predication' type='sheet' worksheet='Bar Chart Avg Salary vs Job Categories' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Job in Data Science Salary Predication' />
      </command>
    </action>
    <action caption='Filter 2 (generated)' name='[Action4_3CE558093DC84F60A5FAE812C987224A]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Job in Data Science Salary Predication' type='sheet' worksheet='Line Chart Avg Salary vs Years' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Job in Data Science Salary Predication' />
      </command>
    </action>
    <action caption='Filter 3 (generated)' name='[Action5_61A1167C37ED4E4FB1D0AD8B6A2B1B0F]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Job in Data Science Salary Predication' type='sheet' worksheet='Stacked Bar Avg Salries vs experience vs Job Title' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Job in Data Science Salary Predication' />
      </command>
    </action>
    <action caption='Filter 4 (generated)' name='[Action6_648053EC1E084A0988FF04DA5E88957E]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Job in Data Science Salary Predication' type='sheet' worksheet='Pie Chart Avg Salary vs Employment type vs USD vs Year ' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Job in Data Science Salary Predication' />
      </command>
    </action>
    <action caption='Filter 5 (generated)' name='[Action7_B3D462A76DCC41D6A2CAC53A5FFFC8A5]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Job in Data Science Salary Predication' type='sheet' worksheet='Min and Max Salary different company location,job title and employment type' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Job in Data Science Salary Predication' />
      </command>
    </action>
    <action caption='Filter 6 (generated)' name='[Action8_F1EE7B1C2F4C4B69884E33FA7A24B441]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Job in Data Science Salary Predication' type='sheet' worksheet='Year wise Contribution Salary with Job Category' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Job in Data Science Salary Predication' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='Bar Chart Avg Salary vs Job Categories'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontcolor='#f28e2b' fontname='Tableau Bold' fontsize='10'> Average salary for different job categories </run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='jobs_in_data' name='federated.09vnp851mbmqb712dhgsr06j553t' />
          </datasources>
          <datasource-dependencies datasource='federated.09vnp851mbmqb712dhgsr06j553t'>
            <column-instance column='[salary]' derivation='Avg' name='[avg:salary:qk]' pivot='key' type='quantitative' />
            <column caption='Company Location' datatype='string' name='[company_location]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
            <column caption='Employment Type' datatype='string' name='[employment_type]' role='dimension' type='nominal' />
            <column caption='Experience Level' datatype='string' name='[experience_level]' role='dimension' type='nominal' />
            <column caption='Job Category' datatype='string' name='[job_category]' role='dimension' type='nominal' />
            <column caption='Job Title' datatype='string' name='[job_title]' role='dimension' type='nominal' />
            <column-instance column='[job_category]' derivation='None' name='[none:job_category:nk]' pivot='key' type='nominal' />
            <column caption='Salary' datatype='integer' name='[salary]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.09vnp851mbmqb712dhgsr06j553t].[Action (Company Location,Employment Type,Job Title)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action7_B3D462A76DCC41D6A2CAC53A5FFFC8A5]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[company_location]' />
              <groupfilter function='level-members' level='[employment_type]' />
              <groupfilter function='level-members' level='[job_title]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.09vnp851mbmqb712dhgsr06j553t].[Action (Experience Level,Job Title)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action5_61A1167C37ED4E4FB1D0AD8B6A2B1B0F]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[experience_level]' />
              <groupfilter function='level-members' level='[job_title]' />
            </groupfilter>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.09vnp851mbmqb712dhgsr06j553t].[none:job_category:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.09vnp851mbmqb712dhgsr06j553t].[avg:salary:qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.09vnp851mbmqb712dhgsr06j553t].[Action (Company Location,Employment Type,Job Title)]</column>
            <column>[federated.09vnp851mbmqb712dhgsr06j553t].[Action (Experience Level,Job Title)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='header'>
            <format attr='height-header' value='18' />
          </style-rule>
        </style>
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.09vnp851mbmqb712dhgsr06j553t].[none:job_category:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.09vnp851mbmqb712dhgsr06j553t].[avg:salary:qk]</rows>
        <cols>[federated.09vnp851mbmqb712dhgsr06j553t].[none:job_category:nk]</cols>
      </table>
      <simple-id uuid='{6EAD3DD0-4C66-484A-9B2D-53E3B10A84D2}' />
    </worksheet>
    <worksheet name='Line Chart Avg Salary vs Years'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontcolor='#59a14f' fontname='Tableau Bold' fontsize='10'> Average salaries over the recorded years</run>
            <run fontalignment='1'>Æ&#10;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='jobs_in_data' name='federated.09vnp851mbmqb712dhgsr06j553t' />
          </datasources>
          <datasource-dependencies datasource='federated.09vnp851mbmqb712dhgsr06j553t'>
            <column-instance column='[salary]' derivation='Avg' name='[avg:salary:qk]' pivot='key' type='quantitative' />
            <column caption='Company Location' datatype='string' name='[company_location]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
            <column caption='Employment Type' datatype='string' name='[employment_type]' role='dimension' type='nominal' />
            <column caption='Experience Level' datatype='string' name='[experience_level]' role='dimension' type='nominal' />
            <column caption='Job Category' datatype='string' name='[job_category]' role='dimension' type='nominal' />
            <column caption='Job Title' datatype='string' name='[job_title]' role='dimension' type='nominal' />
            <column-instance column='[work_year]' derivation='None' name='[none:work_year:qk]' pivot='key' type='quantitative' />
            <column caption='Salary' datatype='integer' name='[salary]' role='measure' type='quantitative' />
            <column caption='Work Year' datatype='integer' name='[work_year]' role='dimension' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.09vnp851mbmqb712dhgsr06j553t].[Action (Company Location,Employment Type,Job Title)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action7_B3D462A76DCC41D6A2CAC53A5FFFC8A5]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[company_location]' />
              <groupfilter function='level-members' level='[employment_type]' />
              <groupfilter function='level-members' level='[job_title]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.09vnp851mbmqb712dhgsr06j553t].[Action (Experience Level,Job Title)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action5_61A1167C37ED4E4FB1D0AD8B6A2B1B0F]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[experience_level]' />
              <groupfilter function='level-members' level='[job_title]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.09vnp851mbmqb712dhgsr06j553t].[Action (Job Category)]'>
            <groupfilter function='level-members' level='[job_category]' user:ui-action-filter='[Action3_79FF099D2B0D4A66B31CBFC9300B6A74]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.09vnp851mbmqb712dhgsr06j553t].[Action (Company Location,Employment Type,Job Title)]</column>
            <column>[federated.09vnp851mbmqb712dhgsr06j553t].[Action (Experience Level,Job Title)]</column>
            <column>[federated.09vnp851mbmqb712dhgsr06j553t].[Action (Job Category)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='border-color' scope='rows' value='#00ff00' />
            <format attr='border-width' scope='rows' value='0' />
            <format attr='border-style' scope='rows' value='none' />
          </style-rule>
          <style-rule element='header'>
            <format attr='background-color' value='#00000000' />
          </style-rule>
          <style-rule element='label'>
            <format attr='color' field='[federated.09vnp851mbmqb712dhgsr06j553t].[avg:salary:qk]' value='#4e79a7' />
            <format attr='color' field='[federated.09vnp851mbmqb712dhgsr06j553t].[none:work_year:qk]' value='#606b76' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.09vnp851mbmqb712dhgsr06j553t].[avg:salary:qk]' num-steps='5' reverse='true' type='custom-interpolated'>
              <color-palette custom='true' name='' type='ordered-sequential'>
                <color>#f1f1f1</color>
                <color>#f2dada</color>
                <color>#f3c3c3</color>
                <color>#f5abab</color>
                <color>#f69393</color>
                <color>#f87c7c</color>
                <color>#f96363</color>
                <color>#fa4b4b</color>
                <color>#fc3232</color>
                <color>#fd1919</color>
                <color>#ff0000</color>
              </color-palette>
            </encoding>
          </style-rule>
          <style-rule element='pane'>
            <format attr='band-color' scope='rows' value='#00000000' />
            <format attr='border-color' data-class='subtotal' scope='rows' value='#ff0000' />
            <format attr='border-width' data-class='subtotal' scope='rows' value='0' />
            <format attr='border-style' data-class='subtotal' scope='rows' value='none' />
            <format attr='border-color' data-class='total' scope='rows' value='#00ff00' />
            <format attr='border-width' data-class='total' scope='rows' value='0' />
            <format attr='border-style' data-class='total' scope='rows' value='none' />
            <format attr='background-color' value='#00000000' />
            <format attr='background-color' data-class='subtotal' value='#00000000' />
          </style-rule>
          <style-rule element='table'>
            <format attr='band-size' scope='rows' value='1' />
            <format attr='background-color' value='#00000000' />
          </style-rule>
          <style-rule element='table-div'>
            <format attr='line-pattern-only' scope='rows' value='dashed' />
            <format attr='stroke-color' scope='rows' value='#ff0000' />
            <format attr='stroke-size' scope='rows' value='0' />
            <format attr='line-visibility' scope='rows' value='off' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.09vnp851mbmqb712dhgsr06j553t].[avg:salary:qk]' />
            </encodings>
            <dropline drop-when='selected' haslabel='false' x-axis='true' y-axis='true' />
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' fit='linear' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.09vnp851mbmqb712dhgsr06j553t].[avg:salary:qk]</rows>
        <cols>[federated.09vnp851mbmqb712dhgsr06j553t].[none:work_year:qk]</cols>
      </table>
      <simple-id uuid='{88C836F3-5C99-4059-9D6D-7A3B8AFD15E0}' />
    </worksheet>
    <worksheet name='Min and Max Salary different company location,job title and employment type'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1' fontcolor='#ff9da7' fontname='Tableau Bold' fontsize='10'>Table for different employement type,company location,job title,min and max salary</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='jobs_in_data' name='federated.09vnp851mbmqb712dhgsr06j553t' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.09vnp851mbmqb712dhgsr06j553t'>
            <column caption='Company Location' datatype='string' name='[company_location]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
            <column caption='Employment Type' datatype='string' name='[employment_type]' role='dimension' type='nominal' />
            <column caption='Experience Level' datatype='string' name='[experience_level]' role='dimension' type='nominal' />
            <column caption='Job Category' datatype='string' name='[job_category]' role='dimension' type='nominal' />
            <column caption='Job Title' datatype='string' name='[job_title]' role='dimension' type='nominal' />
            <column-instance column='[salary]' derivation='Max' name='[max:salary:qk]' pivot='key' type='quantitative' />
            <column-instance column='[salary]' derivation='Min' name='[min:salary:qk]' pivot='key' type='quantitative' />
            <column-instance column='[company_location]' derivation='None' name='[none:company_location:nk]' pivot='key' type='nominal' />
            <column-instance column='[employment_type]' derivation='None' name='[none:employment_type:nk]' pivot='key' type='nominal' />
            <column-instance column='[job_title]' derivation='None' name='[none:job_title:nk]' pivot='key' type='nominal' />
            <column caption='Salary' datatype='integer' name='[salary]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.09vnp851mbmqb712dhgsr06j553t].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.09vnp851mbmqb712dhgsr06j553t].[min:salary:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.09vnp851mbmqb712dhgsr06j553t].[max:salary:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.09vnp851mbmqb712dhgsr06j553t].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.09vnp851mbmqb712dhgsr06j553t].[min:salary:qk]&quot;</bucket>
              <bucket>&quot;[federated.09vnp851mbmqb712dhgsr06j553t].[max:salary:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.09vnp851mbmqb712dhgsr06j553t].[Action (Experience Level,Job Title)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action5_61A1167C37ED4E4FB1D0AD8B6A2B1B0F]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[experience_level]' />
              <groupfilter function='level-members' level='[job_title]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.09vnp851mbmqb712dhgsr06j553t].[Action (Job Category)]'>
            <groupfilter function='level-members' level='[job_category]' user:ui-action-filter='[Action3_79FF099D2B0D4A66B31CBFC9300B6A74]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.09vnp851mbmqb712dhgsr06j553t].[max:salary:qk]' included-values='in-range'>
            <min>4000</min>
            <max>450000</max>
          </filter>
          <filter class='quantitative' column='[federated.09vnp851mbmqb712dhgsr06j553t].[min:salary:qk]' included-values='in-range'>
            <min>14000</min>
            <max>416000</max>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.09vnp851mbmqb712dhgsr06j553t].[none:job_title:nk]' direction='ASC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.09vnp851mbmqb712dhgsr06j553t].[max:salary:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.09vnp851mbmqb712dhgsr06j553t].[:Measure Names]</column>
            <column>[federated.09vnp851mbmqb712dhgsr06j553t].[min:salary:qk]</column>
            <column>[federated.09vnp851mbmqb712dhgsr06j553t].[max:salary:qk]</column>
            <column>[federated.09vnp851mbmqb712dhgsr06j553t].[Action (Experience Level,Job Title)]</column>
            <column>[federated.09vnp851mbmqb712dhgsr06j553t].[Action (Job Category)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='size-bar' field='[federated.09vnp851mbmqb712dhgsr06j553t].[min:salary:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
            <encoding attr='size-bar' field='[federated.09vnp851mbmqb712dhgsr06j553t].[max:salary:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
          </style-rule>
          <style-rule element='table'>
            <format attr='omit-on-special' field='[federated.09vnp851mbmqb712dhgsr06j553t].[none:company_location:nk]' value='false' />
            <format attr='break-on-special' field='[federated.09vnp851mbmqb712dhgsr06j553t].[none:company_location:nk]' value='false' />
            <format attr='show-null-value-warning' field='[federated.09vnp851mbmqb712dhgsr06j553t].[none:company_location:nk]' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.09vnp851mbmqb712dhgsr06j553t].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.09vnp851mbmqb712dhgsr06j553t].[none:employment_type:nk] / ([federated.09vnp851mbmqb712dhgsr06j553t].[none:company_location:nk] / [federated.09vnp851mbmqb712dhgsr06j553t].[none:job_title:nk]))</rows>
        <cols>[federated.09vnp851mbmqb712dhgsr06j553t].[:Measure Names]</cols>
      </table>
      <simple-id uuid='{63AF62FF-D03F-4A9D-9D24-294BC7493BD3}' />
    </worksheet>
    <worksheet name='Pie Chart Avg Salary vs Employment type vs USD vs Year '>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontcolor='#aaaa00' fontname='Tableau Bold' fontsize='10'> Salary proportion of Full-time, Part-time, and Contract employment types </run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='jobs_in_data' name='federated.09vnp851mbmqb712dhgsr06j553t' />
          </datasources>
          <datasource-dependencies datasource='federated.09vnp851mbmqb712dhgsr06j553t'>
            <column-instance column='[salary_in_usd]' derivation='Avg' name='[avg:salary_in_usd:qk]' pivot='key' type='quantitative' />
            <column caption='Company Location' datatype='string' name='[company_location]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
            <column caption='Employment Type' datatype='string' name='[employment_type]' role='dimension' type='nominal' />
            <column caption='Experience Level' datatype='string' name='[experience_level]' role='dimension' type='nominal' />
            <column caption='Job Category' datatype='string' name='[job_category]' role='dimension' type='nominal' />
            <column caption='Job Title' datatype='string' name='[job_title]' role='dimension' type='nominal' />
            <column-instance column='[employment_type]' derivation='None' name='[none:employment_type:nk]' pivot='key' type='nominal' />
            <column-instance column='[salary_currency]' derivation='None' name='[none:salary_currency:nk]' pivot='key' type='nominal' />
            <column-instance column='[work_year]' derivation='None' name='[none:work_year:qk]' pivot='key' type='quantitative' />
            <column caption='Salary Currency' datatype='string' name='[salary_currency]' role='dimension' type='nominal' />
            <column caption='Salary In Usd' datatype='integer' name='[salary_in_usd]' role='measure' type='quantitative' />
            <column caption='Work Year' datatype='integer' name='[work_year]' role='dimension' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.09vnp851mbmqb712dhgsr06j553t].[Action (Company Location,Employment Type,Job Title)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action7_B3D462A76DCC41D6A2CAC53A5FFFC8A5]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[company_location]' />
              <groupfilter function='level-members' level='[employment_type]' />
              <groupfilter function='level-members' level='[job_title]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.09vnp851mbmqb712dhgsr06j553t].[Action (Experience Level,Job Title)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action5_61A1167C37ED4E4FB1D0AD8B6A2B1B0F]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[experience_level]' />
              <groupfilter function='level-members' level='[job_title]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.09vnp851mbmqb712dhgsr06j553t].[Action (Job Category)]'>
            <groupfilter function='level-members' level='[job_category]' user:ui-action-filter='[Action3_79FF099D2B0D4A66B31CBFC9300B6A74]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <computed-sort column='[federated.09vnp851mbmqb712dhgsr06j553t].[none:employment_type:nk]' direction='ASC' using='[federated.09vnp851mbmqb712dhgsr06j553t].[avg:salary_in_usd:qk]' />
          <slices>
            <column>[federated.09vnp851mbmqb712dhgsr06j553t].[Action (Company Location,Employment Type,Job Title)]</column>
            <column>[federated.09vnp851mbmqb712dhgsr06j553t].[Action (Experience Level,Job Title)]</column>
            <column>[federated.09vnp851mbmqb712dhgsr06j553t].[Action (Job Category)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.09vnp851mbmqb712dhgsr06j553t].[none:employment_type:nk]' />
              <text column='[federated.09vnp851mbmqb712dhgsr06j553t].[none:salary_currency:nk]' />
              <text column='[federated.09vnp851mbmqb712dhgsr06j553t].[none:employment_type:nk]' />
              <text column='[federated.09vnp851mbmqb712dhgsr06j553t].[avg:salary_in_usd:qk]' />
              <text column='[federated.09vnp851mbmqb712dhgsr06j553t].[none:work_year:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
                <format attr='size' value='1.3953038454055786' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{014CDCC6-68CB-4496-8D0D-3287350A5216}' />
    </worksheet>
    <worksheet name='Salary based on experience level'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontcolor='#d4a6c8' fontname='Tableau Bold' fontsize='10'>Experience based on salary</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='jobs_in_data' name='federated.09vnp851mbmqb712dhgsr06j553t' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.09vnp851mbmqb712dhgsr06j553t'>
            <column caption='Experience Level' datatype='string' name='[experience_level]' role='dimension' type='nominal' />
            <column-instance column='[experience_level]' derivation='None' name='[none:experience_level:nk]' pivot='key' type='nominal' />
            <column caption='Salary' datatype='integer' name='[salary]' role='measure' type='quantitative' />
            <column-instance column='[salary]' derivation='Sum' name='[sum:salary:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.09vnp851mbmqb712dhgsr06j553t].[none:experience_level:nk]' />
              <size column='[federated.09vnp851mbmqb712dhgsr06j553t].[none:experience_level:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.09vnp851mbmqb712dhgsr06j553t].[sum:salary:qk]</rows>
        <cols>[federated.09vnp851mbmqb712dhgsr06j553t].[none:experience_level:nk]</cols>
      </table>
      <simple-id uuid='{C9FEFEC5-8F3D-465C-B351-A9207F208049}' />
    </worksheet>
    <worksheet name='Stacked Bar Avg Salries vs experience vs Job Title'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontcolor='#e15759' fontname='Tableau Bold' fontsize='10'> Average salaries for different experience levels within the Job Title data field</run>
            <run fontalignment='1'>Æ&#10;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='jobs_in_data' name='federated.09vnp851mbmqb712dhgsr06j553t' />
          </datasources>
          <datasource-dependencies datasource='federated.09vnp851mbmqb712dhgsr06j553t'>
            <column-instance column='[salary]' derivation='Avg' name='[avg:salary:qk]' pivot='key' type='quantitative' />
            <column caption='Company Location' datatype='string' name='[company_location]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
            <column caption='Employment Type' datatype='string' name='[employment_type]' role='dimension' type='nominal' />
            <column caption='Experience Level' datatype='string' name='[experience_level]' role='dimension' type='nominal' />
            <column caption='Job Category' datatype='string' name='[job_category]' role='dimension' type='nominal' />
            <column caption='Job Title' datatype='string' name='[job_title]' role='dimension' type='nominal' />
            <column-instance column='[experience_level]' derivation='None' name='[none:experience_level:nk]' pivot='key' type='nominal' />
            <column-instance column='[job_title]' derivation='None' name='[none:job_title:nk]' pivot='key' type='nominal' />
            <column caption='Salary' datatype='integer' name='[salary]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.09vnp851mbmqb712dhgsr06j553t].[Action (Company Location,Employment Type,Job Title)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action7_B3D462A76DCC41D6A2CAC53A5FFFC8A5]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[company_location]' />
              <groupfilter function='level-members' level='[employment_type]' />
              <groupfilter function='level-members' level='[job_title]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.09vnp851mbmqb712dhgsr06j553t].[Action (Job Category)]'>
            <groupfilter function='level-members' level='[job_category]' user:ui-action-filter='[Action3_79FF099D2B0D4A66B31CBFC9300B6A74]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <manual-sort column='[federated.09vnp851mbmqb712dhgsr06j553t].[none:experience_level:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Entry-level&quot;</bucket>
              <bucket>&quot;Senior&quot;</bucket>
              <bucket>&quot;Executive&quot;</bucket>
              <bucket>&quot;Mid-level&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.09vnp851mbmqb712dhgsr06j553t].[Action (Company Location,Employment Type,Job Title)]</column>
            <column>[federated.09vnp851mbmqb712dhgsr06j553t].[Action (Job Category)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='header'>
            <format attr='height-header' value='19' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.09vnp851mbmqb712dhgsr06j553t].[none:experience_level:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.09vnp851mbmqb712dhgsr06j553t].[avg:salary:qk]</rows>
        <cols>[federated.09vnp851mbmqb712dhgsr06j553t].[none:job_title:nk]</cols>
      </table>
      <simple-id uuid='{28312993-3F58-47AA-AB93-F4DD0770A720}' />
    </worksheet>
    <worksheet name='Year wise Contribution Salary with Job Category'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1' fontcolor='#76b7b2' fontname='Tableau Bold' fontsize='10'>Year Wise Contribution on Salary with Job Category</run>
            <run fontalignment='1'>Æ&#10;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='jobs_in_data' name='federated.09vnp851mbmqb712dhgsr06j553t' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.09vnp851mbmqb712dhgsr06j553t'>
            <column caption='Job Category' datatype='string' name='[job_category]' role='dimension' type='nominal' />
            <column-instance column='[job_category]' derivation='None' name='[none:job_category:nk]' pivot='key' type='nominal' />
            <column-instance column='[work_year]' derivation='None' name='[none:work_year:qk]' pivot='key' type='quantitative' />
            <column caption='Salary' datatype='integer' name='[salary]' role='measure' type='quantitative' />
            <column-instance column='[salary]' derivation='Sum' name='[sum:salary:qk]' pivot='key' type='quantitative' />
            <column caption='Work Year' datatype='integer' name='[work_year]' role='dimension' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.09vnp851mbmqb712dhgsr06j553t].[sum:salary:qk]' included-values='non-null' />
          <slices>
            <column>[federated.09vnp851mbmqb712dhgsr06j553t].[sum:salary:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='size-bar' field='[federated.09vnp851mbmqb712dhgsr06j553t].[sum:salary:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
            <encoding attr='color' field='[federated.09vnp851mbmqb712dhgsr06j553t].[sum:salary:qk]' num-steps='5' symmetric='false' type='custom-interpolated'>
              <color-palette custom='true' name='' type='ordered-diverging'>
                <color>#ff0000</color>
                <color>#f82929</color>
                <color>#f25050</color>
                <color>#ec7676</color>
                <color>#e59999</color>
                <color>#dfbaba</color>
                <color>#d9d9d9</color>
                <color>#badfba</color>
                <color>#99e599</color>
                <color>#76ec76</color>
                <color>#50f250</color>
                <color>#29f829</color>
                <color>#00ff00</color>
              </color-palette>
            </encoding>
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='b01002_001e' value='false' />
            <format attr='enabled' id='b01002_002e' value='false' />
            <format attr='enabled' id='b01002_003e' value='false' />
            <format attr='enabled' id='dp02_0001e' value='false' />
            <format attr='enabled' id='dp02_0015e' value='false' />
            <format attr='enabled' id='dp03_0027e_plus_dp03_0029e' value='false' />
            <format attr='enabled' id='dp03_0028e' value='false' />
            <format attr='enabled' id='dp03_0030e_plus_dp03_0031e' value='false' />
            <format attr='enabled' id='dp03_0062e' value='false' />
            <format attr='enabled' id='dp03_0088e' value='false' />
            <format attr='enabled' id='dp04_0001e' value='false' />
            <format attr='enabled' id='dp04_0046e' value='false' />
            <format attr='enabled' id='dp04_0047e' value='false' />
            <format attr='enabled' id='dp04_0089e' value='false' />
            <format attr='enabled' id='dp05_0001e' value='false' />
            <format attr='enabled' id='dp05_0002e_div_dp05_0003e' value='false' />
            <format attr='enabled' id='dp05_0032e' value='false' />
            <format attr='enabled' id='dp05_0033e' value='false' />
            <format attr='enabled' id='dp05_0034e' value='false' />
            <format attr='enabled' id='dp05_0039e' value='false' />
            <format attr='enabled' id='dp05_0047e' value='false' />
            <format attr='enabled' id='dp05_0053e' value='false' />
            <format attr='enabled' id='dp05_0066e' value='false' />
            <format attr='enabled' id='dp05_0077e' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0' />
            <format attr='map-style' value='outdoors' />
          </style-rule>
          <style-rule element='map-data-layer'>
            <format attr='palette' value='tableau-map-blue-green-light' />
            <format attr='geo-area-type' value='State' />
          </style-rule>
        </style>
        <panes>
          <pane id='5' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.09vnp851mbmqb712dhgsr06j553t].[none:job_category:nk]' />
              <text column='[federated.09vnp851mbmqb712dhgsr06j553t].[sum:salary:qk]' />
              <color column='[federated.09vnp851mbmqb712dhgsr06j553t].[sum:salary:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.09vnp851mbmqb712dhgsr06j553t].[sum:salary:qk]</rows>
        <cols>[federated.09vnp851mbmqb712dhgsr06j553t].[none:work_year:qk]</cols>
        <show-full-range>
          <column>[federated.09vnp851mbmqb712dhgsr06j553t].[Salary In Usd (bin)]</column>
        </show-full-range>
      </table>
      <simple-id uuid='{AD910757-6608-43F4-AAEE-A670C01C8A7E}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Job in Data Science Salary Predication'>
      <style />
      <size sizing-mode='automatic' />
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98142' id='21' param='horz' type-v2='layout-flow' w='99062' x='469' y='929'>
            <zone h='98142' id='6' type-v2='layout-basic' w='99062' x='469' y='929'>
              <zone h='32289' id='3' name='Bar Chart Avg Salary vs Job Categories' w='50318' x='469' y='929'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='47503' id='5' name='Line Chart Avg Salary vs Years' w='24369' x='50787' y='929'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='32924' id='10' name='Stacked Bar Avg Salries vs experience vs Job Title' w='50318' x='469' y='33218'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='50639' id='12' name='Pie Chart Avg Salary vs Employment type vs USD vs Year ' w='24370' x='50787' y='48432'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='32929' id='13' name='Min and Max Salary different company location,job title and employment type' w='50318' x='469' y='66142'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='50639' id='16' name='Year wise Contribution Salary with Job Category' w='24374' x='75157' y='48432'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='47503' id='19' name='Salary based on experience level' w='24375' x='75156' y='929'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1950' minheight='1950' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='31' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98142' id='30' param='vert' type-v2='layout-flow' w='99062' x='469' y='929'>
                <zone fixed-size='251' h='32289' id='3' is-fixed='true' name='Bar Chart Avg Salary vs Job Categories' w='50318' x='469' y='929'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='47503' id='5' is-fixed='true' name='Line Chart Avg Salary vs Years' w='24369' x='50787' y='929'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='47503' id='19' is-fixed='true' name='Salary based on experience level' w='24375' x='75156' y='929'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='255' h='32924' id='10' is-fixed='true' name='Stacked Bar Avg Salries vs experience vs Job Title' w='50318' x='469' y='33218'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='50639' id='12' is-fixed='true' name='Pie Chart Avg Salary vs Employment type vs USD vs Year ' w='24370' x='50787' y='48432'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='50639' id='16' is-fixed='true' name='Year wise Contribution Salary with Job Category' w='24374' x='75157' y='48432'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='256' h='32929' id='13' is-fixed='true' name='Min and Max Salary different company location,job title and employment type' w='50318' x='469' y='66142'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{A68A137C-0397-4243-8E8B-98144DB0EF10}' />
    </dashboard>
  </dashboards>
  <windows saved-dpi-scale-factor='1.25' source-height='37'>
    <window class='worksheet' name='Bar Chart Avg Salary vs Job Categories' tab-color='#f66273'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.09vnp851mbmqb712dhgsr06j553t].[none:job_category:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{A08F4BBE-F35B-495A-956B-11ECE537C6BC}' />
    </window>
    <window class='worksheet' name='Line Chart Avg Salary vs Years' tab-color='#4f779a'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
          <strip size='160'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.09vnp851mbmqb712dhgsr06j553t].[avg:salary:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.09vnp851mbmqb712dhgsr06j553t].[none:work_year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{9F655A93-BBF6-4477-B12A-7F0C9EDF9273}' />
    </window>
    <window class='worksheet' name='Stacked Bar Avg Salries vs experience vs Job Title' tab-color='#6e597f'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.09vnp851mbmqb712dhgsr06j553t].[none:experience_level:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.09vnp851mbmqb712dhgsr06j553t].[none:experience_level:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{1F2B075A-B447-49F8-81F5-0A03CD8A1D62}' />
    </window>
    <window class='worksheet' name='Pie Chart Avg Salary vs Employment type vs USD vs Year ' tab-color='#72bcbb'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.09vnp851mbmqb712dhgsr06j553t].[none:employment_type:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.09vnp851mbmqb712dhgsr06j553t].[none:employment_type:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{A6C06153-E618-446D-8264-7EA249193178}' />
    </window>
    <window class='worksheet' name='Min and Max Salary different company location,job title and employment type' tab-color='#a65200'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.09vnp851mbmqb712dhgsr06j553t].[max:salary:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card param='[federated.09vnp851mbmqb712dhgsr06j553t].[min:salary:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.09vnp851mbmqb712dhgsr06j553t].[min:salary:qk]</field>
            <field>[federated.09vnp851mbmqb712dhgsr06j553t].[none:company_location:nk]</field>
            <field>[federated.09vnp851mbmqb712dhgsr06j553t].[none:employee_residence:nk]</field>
            <field>[federated.09vnp851mbmqb712dhgsr06j553t].[none:employment_type:nk]</field>
            <field>[federated.09vnp851mbmqb712dhgsr06j553t].[none:job_category:nk]</field>
            <field>[federated.09vnp851mbmqb712dhgsr06j553t].[none:job_title:nk]</field>
            <field>[federated.09vnp851mbmqb712dhgsr06j553t].[none:salary_currency:nk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{BA8A2FD0-4BDB-4903-A101-AFC4A284C08C}' />
    </window>
    <window class='worksheet' name='Year wise Contribution Salary with Job Category' tab-color='#dec77b'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='5' param='[federated.09vnp851mbmqb712dhgsr06j553t].[sum:salary:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.09vnp851mbmqb712dhgsr06j553t].[none:Salary In Usd (bin):qk]</field>
            <field>[federated.09vnp851mbmqb712dhgsr06j553t].[none:company_location:nk]</field>
            <field>[federated.09vnp851mbmqb712dhgsr06j553t].[none:employee_residence:nk]</field>
            <field>[federated.09vnp851mbmqb712dhgsr06j553t].[none:salary_currency:nk]</field>
            <field>[federated.09vnp851mbmqb712dhgsr06j553t].[none:work_year:qk]</field>
            <field>[federated.09vnp851mbmqb712dhgsr06j553t].[sum:salary:qk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{BA0F9AA1-6EA9-4F7F-B0DD-799BB19C50D2}' />
    </window>
    <window class='worksheet' name='Salary based on experience level' tab-color='#4f779a'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.09vnp851mbmqb712dhgsr06j553t].[none:experience_level:nk]' type='color' />
            <card pane-specification-id='0' param='[federated.09vnp851mbmqb712dhgsr06j553t].[none:experience_level:nk]' type='size' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.09vnp851mbmqb712dhgsr06j553t].[none:experience_level:nk]</field>
            <field>[federated.09vnp851mbmqb712dhgsr06j553t].[none:work_year:qk]</field>
            <field>[federated.09vnp851mbmqb712dhgsr06j553t].[sum:salary:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{4D064687-4410-406B-8962-A9870797DF84}' />
    </window>
    <window class='dashboard' maximized='true' name='Job in Data Science Salary Predication'>
      <viewpoints>
        <viewpoint name='Bar Chart Avg Salary vs Job Categories' />
        <viewpoint name='Line Chart Avg Salary vs Years' />
        <viewpoint name='Min and Max Salary different company location,job title and employment type' />
        <viewpoint name='Pie Chart Avg Salary vs Employment type vs USD vs Year '>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Salary based on experience level'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Stacked Bar Avg Salries vs experience vs Job Title' />
        <viewpoint name='Year wise Contribution Salary with Job Category'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='16' />
      <simple-id uuid='{0241AC6B-C19E-49F9-B1DE-2A50FC86E67D}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Bar Chart Avg Salary vs Job Categories' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Job in Data Science Salary Predication' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Line Chart Avg Salary vs Years' width='192'>
      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
      AeeNbVTdXspnAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Min and Max Salary different company location,job title and employment type' width='192'>
      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
      YII=
    </thumbnail>
    <thumbnail height='192' name='Pie Chart Avg Salary vs Employment type vs USD vs Year ' width='192'>
      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
      DqkAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Salary based on experience level' width='192'>
      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
      G5AvMcJFVgAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Stacked Bar Avg Salries vs experience vs Job Title' width='192'>
      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
      z0t7dKMSjAAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Year wise Contribution Salary with Job Category' width='192'>
      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
      RK5CYII=
    </thumbnail>
  </thumbnails>
</workbook>
